#!/usr/bin/env node
"use strict";exports.__esModule=!0;var chokidar=require("chokidar"),crypto=require("crypto"),fs=require("fs"),glob=require("glob"),path=require("path"),yargs=require("yargs"),args=yargs.describe("ext","File extension used for index files and internal filter").describe("name","File name used for the index files").describe("watch","Enables watch mode").argv;function getHash(e){return crypto.createHash("md5").update(e.split("\r\n").map(function(e){return/^\/\//.test(e)?"":e}).join()).digest("hex")}function compareContents(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];var t=!0;if(e.length){var i=getHash(e[0]);e.slice(1).forEach(function(e){i!=getHash(e)&&t&&(t=!1)})}return t}function getModules(e,i,t){fs.readdir(path.dirname(e),function(e,n){if(e)throw e;t(n.filter(function(n){var t=!0;return[/\.d\.ts$/,new RegExp("\\.(?:spec|test)\\."+i.fileExtension),new RegExp("^"+i.fileName+"\\."+i.fileExtension)].concat(i.ignoreFiles.map(function(e){return new RegExp(/^\//.test(e)?""+e.substring(1,e.length-1):"^"+path.basename(e,"."+i.fileExtension)+"\\."+i.fileExtension)})).forEach(function(e){new RegExp("\\."+i.fileExtension+"$").test(n)&&!e.test(n)||t&&(t=!1)}),t}).map(function(e){return path.basename(e,"."+i.fileExtension)}))})}function createFileContents(e){return e.length?e.reduce(function(e,n){return e+"export { default as "+n+" } from './"+n+"';\r\n"},""):""}function createFile(n,r){getModules(n,r,function(e){var t=path.join(path.dirname(n),r.fileName+"."+r.fileExtension),i=createFileContents(e);e.length?fs.access(t,fs.constants.R_OK,function(e){e?fs.writeFile(t,i,function(e){if(e)throw e}):fs.readFile(t,"utf8",function(e,n){if(e)throw e;compareContents(i,n)||fs.writeFile(t,i,function(e){if(e)throw e})})}):fs.access(t,fs.constants.F_OK,function(e){if(e)throw e;fs.unlink(t,function(e){if(e)throw e})})})}glob((args._[0]||"./**")+"/.@(esm-index|index)rc.json",function(e,n){if(e)throw e;n.forEach(function(i){fs.readFile(i,"utf8",function(e,n){if(e)throw e;var t=Object.assign({fileExtension:args.ext||"js",fileName:args.name||"index",ignoreFiles:[]},JSON.parse(n||"{}"));createFile(i,t),args.watch&&chokidar.watch(path.dirname(i),{ignored:[!new RegExp("\\.(?:"+t.fileExtension+"|json)$"),t.fileName+"."+t.fileExtension]}).on("all",function(){createFile(i,t)})})})});